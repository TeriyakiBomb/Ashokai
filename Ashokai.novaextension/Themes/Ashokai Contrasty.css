meta {
  -theme-interface-style: dark;
  -theme-vibrancy: none;
  -theme-accent-color: hsl(218, 100%, 33%);
}
meta.window {
  background-color: hsl(225, 17%, 9%);
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.titlebar {
  color: hsl(0, 0%, 100%);
  background-color: hsl(220, 19%, 9%);
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.titlebar.inactive {
  background-color: hsl(220, 19%, 9%);
}
meta.button {
  background: linear-gradient(hsla(0, 0%, 60%, 0.25), hsla(0, 0%, 50%, 0.2));
  border-color: hsla(0, 0%, 0%, 0.2);
  color: hsl(0, 0%, 100%);
}
meta.button.highlighted {
  background: linear-gradient(hsla(0, 0%, 60%, 0.5), hsla(0, 0%, 50%, 0.1));
}
meta.button.selected {
  background: linear-gradient(hsl(205, 100%, 63%), hsl(226, 100%, 50%));
  color: hsl(0, 0%, 100%);
}
meta.button.highlighted.selected {
  background: linear-gradient(
    hsla(221, 71%, 69%, 0.75),
    hsla(226, 71%, 44%, 0.75)
  );
  color: hsl(0, 0%, 100%);
}
meta.textfield {
  background-color: hsl(0, 0%, 14%);
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.textfield.highlighted {
  background-color: hsl(0, 0%, 14%);
  border-color: hsla(0, 0%, 60%, 0.5);
}
meta.document.button {
  background: linear-gradient(hsla(0, 0%, 60%, 0.25), hsla(0, 0%, 50%, 0.2));
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.document.button.disabled {
  background-color: transparent;
  color: hsla(0, 0%, 64%, 0.5);
}
meta.document.button.highlighted {
  background: linear-gradient(hsla(0, 0%, 60%, 0.5), hsla(0, 0%, 50%, 0.1));
}
meta.document.textfield {
  background-color: hsla(0, 0%, 50%, 0.15);
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.document.textfield.highlighted {
  background-color: hsl(0, 0%, 14%);
  border-color: hsla(0, 0%, 60%, 0.5);
}

/* Document styles */
meta.document {
  background-color: hsl(217, 18%, 12%);
  border-color: transparent;
}
meta.document.button {
  background-color: hsl(217, 33%, 22%);
  color: hsl(217, 25%, 70%);
}
meta.document.button.disabled {
  background-color: hsl(217, 33%, 19%);
  border-color: transparent;
  color: hsl(217, 29%, 40%);
}
meta.document.button.highlighted {
  background-color: hsl(217, 33%, 25%);
}
meta.textfield {
  background-color: hsl(0, 0%, 14%);
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.textfield.highlighted {
  background-color: hsl(0, 0%, 14%);
  border-color: hsla(0, 0%, 60%, 0.5);
}

/* Text */
meta.text {
  color: hsl(0, 0%, 100%);
}
meta.text.invisible {
  color: hsl(217, 40%, 30%);
}
meta.text.selected {
  background-color: hsl(217, 100%, 28%);
}

/* Cursor */
meta.cursor {
  background-color: hsla(217, 35%, 20%, 0.319);
}

/* Indentation Guides */
meta.indentguide {
  border-color: hsl(217, 40%, 30%);
}

/* Gutter */
meta.gutter {
  color: hsl(217, 32%, 32%);
}
meta.gutter.selected {
  color: hsl(217, 27%, 62%);
}

/* Syntax styles */
keyword {
  color: hsl(207, 100%, 69%);
}
comment {
  color: hsl(217, 32%, 45%);
}
processing {
  color: hsl(210, 20%, 50%);
}
declaration {
  color: hsl(210, 20%, 50%);
}
bracket {
  color: hsl(210, 20%, 52%);
}
operator {
  color: hsl(339, 100%, 56%);
}
invalid {
  background-color: hsl(355, 82%, 96%);
  color: hsl(0, 0%, 100%);
}
link {
  color: hsl(0, 0%, 100%);
}

/* Values */
value.boolean {
  color: hsl(0, 0%, 100%);
}
value.null {
  color: hsl(0, 0%, 100%);
}
value.number {
  color: hsl(270, 76%, 71%);
}
value.entity {
  color: hsl(0, 0%, 100%);
}
value.symbol {
  color: hsl(0, 0%, 100%);
}

/* Identifiers */
identifier.type {
  color: hsl(256, 51%, 68%);
}
identifier.global,
identifier.variable {
  color: hsl(0, 0%, 100%);
}
identifier.property,
identifier.decorator,
identifier.function,
identifier.method {
  color: hsl(339, 100%, 56%);
}
identifier.key {
  color: hsl(0, 0%, 100%);
}
identifier.argument {
  color: hsl(39, 96%, 69%);
  font-style: italic;
}
javascript.identifier {
  color: hsl(39, 96%, 69%);
}
comment.doctag {
  color: hsl(207, 100%, 69%);
}
identifier.type.constructor {
  color: hsl(311, 73%, 75%);
}
identifier.type.declare {
  color: hsl(133, 88%, 58%);
}
identifier.variable.builtin {
  color: hsl(207, 100%, 69%);
}

/* Strings */
string {
  color: hsl(26, 100%, 64%);
}
string.key {
  color: hsl(0, 0%, 100%);
}
string-template {
  color: hsl(0, 0%, 100%);
}
string-template.value {
  color: hsl(0, 0%, 100%);
}
regex {
  color: hsl(0, 0%, 100%);
}
regex.escaped {
  color: hsl(0, 0%, 100%);
}
cdata {
  color: hsl(0, 0%, 100%);
}

/* Markup */
markup.heading {
  color: hsl(339, 100%, 56%);
}
markup.line {
  color: hsl(60, 50%, 75%);
}
markup.bold {
  color: hsl(196, 60%, 76%);
  font-weight: bold;
}
markup.italic {
  color: hsl(94, 40%, 80%);
  font-style: italic;
}
markup.strikethrough {
  color: hsl(246, 32%, 50%);
}
markup.list.item {
  color: hsl(30, 50%, 80%);
}
markup.code {
  background-color: hsla(0, 0%, 50%, 0.2);
}
markup.link {
  color: hsl(39, 96%, 69%);
}

/* Types */
definition.class class.name,
definition.type type.name,
definition.package package.name,
definition.enum enum.name,
definition.union union.name,
definition.struct struct.name {
  font-weight: bold;
  color: hsl(0, 0%, 100%);
}

/* Members */
definition.property property.name,
definition.function function.name,
definition.method method.name {
  color: hsl(0, 0%, 100%);
}

/* Tags */
tag {
  color: hsl(166, 40%, 78%);
}
tag.bracket {
  color: hsl(217, 32%, 45%);
}
tag.framework {
  color: hsl(311, 73%, 75%);
}
tag.attribute.name {
  color: hsl(95, 54%, 85%);
}
tag.attribute.value {
  color: hsl(39, 100%, 51%);
}
tag.attribute.value.link {
  color: hsl(0, 0%, 100%);
}

/* Styles */
style.at {
  color: hsl(0, 0%, 100%);
}
style.selector {
  color: hsl(133, 88%, 58%);
}
style.attribute.name,
scss.attribute.name {
  color: hsl(39, 96%, 74%);
}
style.value.number {
  color: hsl(0, 0%, 100%);
}

/* HTML */
html.tag {
  color: hsl(217, 45%, 57%);
}
tag.name {
  color: hsl(339, 100%, 56%);
}
html.tag.name {
  color: hsl(339, 100%, 56%);
}

/* JS */
javascript.block {
  color: hsl(217, 27%, 59%);
}
javascript.definition.function {
  color: hsl(207, 100%, 69%);
}
javascript.definition.function.anonymous {
  color: hsl(339, 100%, 56%);
}
javascript.identifier.method {
  color: hsl(339, 100%, 56%);
}
javascript.identifier.name {
  color: hsl(0, 0%, 100%);
}
javascript.identifier.argument {
  color: hsl(42, 90%, 72%);
}
tag.attribute.name {
  color: hsl(133, 88%, 58%);
}

/* TS */
typescript.identifier.constant.name {
  color: hsl(133, 88%, 58%);
}
typescript.identifier.property {
  color: hsl(253, 100%, 96%);
}

/* JSX */
jsx.tag {
  color: hsl(217, 32%, 45%);
}
jsx.tag.name {
  color: hsl(133, 88%, 58%);
}

/* Rust */
definition.function {
  color: hsl(133, 88%, 58%);
}

/* Astro */
astro.block.frontmatter,
astro.tag.attribute.operator,
astro.tag.open,
astro.tag.close {
  color: hsl(217, 32%, 45%);
}
astro.tag.open.name,
astro.tag.close.name {
  color: hsl(339, 100%, 56%);
}
astro.value.variable.bracket {
  color: hsl(207, 100%, 69%);
}

/* Antlers */
antlers.tag.framework.variable.start,
antlers.tag.framework.variable.end {
  color: hsl(207, 100%, 69%);
}
antlers.identifier.argument {
  color: hsl(255, 100%, 86%);
}

/* Twig and liquid */
twig.tag.framework,
liquid.tag.framework {
  color: hsl(207, 100%, 69%);
}
twig.keyword,
handlebars.keyword,
liquid.keyword {
  color: hsl(311, 73%, 75%);
}

/* Elixir WIP */
elixir.definition.function,
elixir.identifier.name,
elixir.keyword {
  color: hsl(339, 100%, 56%);
}
elixir.import,
elixir.import.identifier.symbol {
  color: hsl(133, 88%, 58%);
}
elixir.identifier.constant,
elixir.value.list {
  color: hsl(0, 0%, 100%);
}
elixir.identifier.module.submodule {
  color: hsl(0, 0%, 100%);
}
elixir.identifier {
  color: hsl(39, 96%, 69%);
}
elixir.definition.function {
  color: hsl(207, 100%, 69%);
}
elixir.string.block {
  color: hsl(210, 20%, 50%);
}
elixir.identifier.function.name {
  color: hsl(256, 51%, 68%);
}
elixir.string.key {
  color: hsl(133, 88%, 58%);
}
module {
  color: hsl(256, 51%, 68%);
}

/*  PHP  */

keyword.modifier {
  color: hsl(133, 88%, 58%);
}
/* Advanced PHP */
advphp.static.condition {
  /* if, else, elseif, foreach, ... */
  color: hsl(207, 100%, 69%);
}
advphp.static.processor {
  /* echo, return, print, ... */
  color: hsl(207, 100%, 69%);
}
advphp.static.declaration {
  /* new, public, private, ... */
  color: hsl(133, 88%, 58%);
}
advphp.static.import {
  /* include, require, ... */
  color: hsl(207, 100%, 69%);
}
advphp.static.wordOperator {
  /* AND, OR, XOR, ... */
  color: hsl(339, 100%, 56%);
}
advphp.identifier.variable.prefix {
  color: hsl(311, 73%, 75%);
}
advphp.identifier.variable.name {
  /* $variable */
  color: hsl(30, 50%, 80%);
}
advphp.identifier.variable.this {
  color: hsl(339, 100%, 56%);
}
advphp.wp.keywords,
advphp.curl.keywords,
advphp.static.constant {
  /* ABSPATH, WP_ADMIN, ... */
  color: hsl(30, 50%, 80%);
}
advphp.sql.keywords {
  /* SELECT, FROM, WHERE, ... */
  color: hsl(207, 100%, 69%);
}
advphp.operator {
  /* +, -, /, >, ... */
  color: hsl(339, 100%, 56%);
}
advphp.semicolon {
  /* ; */
  color: hsl(210, 20%, 50%);
}
advphp.identifier.function.keyword {
  /* function */
}
advphp.identifier.function.name {
  /* my_function() */
  color: hsl(207, 100%, 69%);
}
advphp.identifier.parameter.prefix {
  /* my_function($parameter) {} */
  color: hsl(311, 73%, 75%);
}
advphp.identifier.parameter {
  /* my_function($parameter) {} */
  color: hsl(256, 51%, 68%);
}
advphp.identifier.parameter.name {
  /* my_function($parameter) {} */
  color: hsl(30, 50%, 80%);
}
advphp.identifier.object.name {
  /* Object:: */
  color: hsl(256, 51%, 68%);
}
advphp.definition.namespace {
  /* Name\Space */
  color: hsl(210, 20%, 50%);
}
advphp.string {
  color: hsl(207, 38%, 91%);
}
advphp.string.singleQuote {
  color: hsl(26, 100%, 64%);
}
advphp.value.string,
advphp.string.doubleQuote {
  /* "string", 'string' */
  color: hsl(30, 50%, 80%);
}
advphp.string.backTic {
  /* `string` */
  color: hsl(30, 50%, 80%);
}
advphp.tag.framework {
  color: hsl(311, 73%, 75%);
}

/* SQL */
sql.identifier {
  color: hsl(339, 100%, 56%);
}
sql.semicolon {
  color: hsl(210, 20%, 50%);
}
sql.operator.equals,
sql.bracket {
  color: hsl(39, 96%, 69%);
}

handlebars.processing {
  color: hsl(207, 100%, 69%);
}
handlebars.identifier.constant {
  color: hsl(207, 38%, 91%);
}
