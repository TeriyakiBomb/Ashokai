meta {
  -theme-interface-style: dark;
  -theme-vibrancy: none;
  -theme-accent-color: auto;
}
meta.window {
  background-color: hsl(258, 17%, 11%);
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.titlebar {
  color: hsla(256, 100%, 98%, 1);
  background-color: hsl(262, 19%, 11%);
  border-color: hsla(253, 0%, 0%, 0.2);
}
meta.titlebar.inactive {
  background-color: hsl(257, 16%, 8%);
}
meta.button {
  background: linear-gradient(hsla(0, 0%, 60%, 0.25), hsla(0, 0%, 50%, 0.2));
  border-color: hsla(0, 0%, 0%, 0.2);
  color: hsl(256, 100%, 98%);
}
meta.button.highlighted {
  background: linear-gradient(hsla(0, 0%, 60%, 0.5), hsla(0, 0%, 50%, 0.1));
}
meta.button.selected {
  background: linear-gradient(hsl(253, 71%, 69%), hsl(253, 71%, 44%));
  color: hsl(260, 25%, 98%);
}
meta.button.highlighted.selected {
  background: linear-gradient(hsla(253, 71%, 69%, 0.75), hsla(253, 71%, 44%, 0.75));
  color: hsl(260, 25%, 98%);
}
meta.textfield {
  background-color: hsl(261, 11%, 19%);
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.textfield.highlighted {
  background-color: hsl(261, 11%, 10%);
  border-color: hsla(0, 0%, 60%, 0.5);
}

meta.document.button {
  background: linear-gradient(hsla(0, 0%, 60%, 0.25), hsla(0, 0%, 50%, 0.2));
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.document.button.disabled {
  background-color: transparent;
  color: hsla(0, 0%, 64%, 0.5);
}
meta.document.button.highlighted {
  background: linear-gradient(hsla(0, 0%, 60%, 0.5), hsla(0, 0%, 50%, 0.1));
}
meta.document.textfield {
  background-color: hsla(0, 0%, 50%, 0.15);
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.document.textfield.highlighted {
  background-color: hsl(0, 0%, 14%);
  border-color: hsla(0, 0%, 60%, 0.5);
}

/* Document styles */
meta.document {
    background-color: hsl(260, 18%, 14%);
    border-color: transparent;
}

meta.document.button {
    background-color: hsl(253, 33%, 22%);
    color: hsl(253, 25%, 70%);
}
meta.document.button.disabled {
    background-color: hsl(253, 33%, 19%);
    border-color: transparent;
    color: hsl(253, 29%, 40%);
}
meta.document.button.highlighted {
    background-color: hsl(253, 33%, 25%);
}

meta.textfield {
  background-color: hsl(0, 0%, 14%);
  border-color: hsla(0, 0%, 0%, 0.2);
}
meta.textfield.highlighted {
  background-color: hsl(0, 0%, 14%);
  border-color: hsla(0, 0%, 60%, 0.5);
}

/* Text */
meta.text {
    color: hsl(253, 100%, 96%);
}
meta.text.invisible {
    color: hsl(253, 40%, 30%);
}
meta.text.selected {
    background-color: hsl(254, 34%, 35%);
}

/* Cursor */
meta.cursor {
    background-color: hsla(262, 35%, 20%, 0.232);
}

/* Indentation Guides */
meta.indentguide {
    border-color: hsl(262, 40%, 30%);
}

/* Gutter */
meta.gutter {
    color:  hsl(237, 15%, 30%);
}
meta.gutter.selected {
    color:  hsl(254, 31%, 46%);
}


/* Syntax styles */

keyword {
    color: hsl(207, 100%, 74%);
}
comment {
    color: hsl(238, 15%, 40%);
}
processing {
    color: hsl(210, 20%, 50%);
}
declaration {
    color: hsl(210, 20%, 50%);
}
bracket {
    color: hsl(210, 20%, 52%);
}
operator {
    color: hsl(339, 94%, 63%);
}
invalid {
    background-color: hsl(355, 82%, 96%);
    color: hsl(254, 3%, 97%);
}
link {
    color: hsl(253, 60%, 100%);

}

/* Values */
value.boolean {
    color: hsl(253, 60%, 100%);
}
value.null {
    color: hsl(253, 60%, 100%);
}
value.number {
    color: hsl(270, 76%, 71%);
}
value.entity {
    color: hsl(253, 60%, 100%);
}
value.symbol {
    color: hsl(253, 60%, 100%);
}

/* Identifiers */
identifier {
    color: hsl(253, 88%, 94%);
}
identifier.type {
    color: hsl(256, 51%, 68%);
}
identifier.constant {
}
identifier.global, identifier.variable {
    color: hsl(253, 34%, 100%);
}
identifier.property,
identifier.decorator,
identifier.function,
identifier.method {
    color: hsl(339, 94%, 63%);
}
identifier.key {
    color: hsl(260, 72%, 97%);
}
identifier.argument {
    color: hsl(39, 96%, 69%)
    font-style: italic;
}

/* Strings */
string {
    color: hsl(26, 100%, 64%);
}
string.key {
    color: hsl(260, 65%, 97%);
}
string-template {
    color: hsl(260, 60%, 97%);
}
string-template.value {
    color: hsl(260, 72%, 97%);
}
regex {
    color: hsl(260, 72%, 97%);
}
regex.escaped {
    color: hsl(260, 72%, 97%);
}
cdata {
    color: hsl(260, 72%, 97%);
}

/* Markup */
markup.heading {
    color: hsl(339, 94%, 63%);
}
markup.line {
    color: hsl(60, 50%, 75%);
}
markup.bold {
    color: hsl(196, 60%, 76%);
    font-weight: bold;
}
markup.italic {
    color: hsl(94, 40%, 80%);
    font-style: italic;
}
markup.strikethrough {
    color: hsl(0, 60%, 100%);
}
markup.list.item {
    color: hsl(30, 50%, 80%);
}
markup.code {
    background-color: hsla(0, 0%, 50%, 0.2);
}

/* Types */
definition.class class.name,
definition.type type.name,
definition.package package.name,
definition.enum enum.name,
definition.union union.name,
definition.struct struct.name {
    font-weight: bold;
    color: hsl(258, 40%, 87%);
}

/* Members */
definition.property property.name,
definition.function function.name,
definition.method method.name {
    color: hsl(253, 10%, 100%);
}

/* Tags */
tag {
    color: hsl(166, 40%, 78%);
}
tag.bracket{
    color: hsl(217, 32%, 45%);
}
tag.framework {
    color: hsl(311, 73%, 70%);
}
tag.attribute.name {
    color: hsl(95, 54%, 82%);
}
tag.attribute.value {
    color: hsl(39, 96%, 69%);
}
tag.attribute.value.link {
    color: hsl(253, 60%, 97%);
}

/* Styles */
style.at {
    color: hsl(25, 75%, 97%);
}
style.selector {
    color: hsl(133, 73%, 70%);
}
style.attribute.name,
scss.attribute.name {
    color: hsl(39, 74%, 62%);
}

style.value.number{
  color: hsl(253, 38%, 91%);
}

/* HTML */

html.tag {
    color: hsl(246, 32%, 45%);
}

tag.name {
    color: hsl(339, 94%, 63%);
}

html.tag.name {
    color: hsl(339, 94%, 63%);
}

/* ANTLERS */

antlers.tag.framework.variable.start, antlers.tag.framework.variable.end{
  color: hsl(207, 100%, 74%);
}

antlers.identifier.argument{
    color: hsl(272, 100%, 72%);
}

antlers.operator{
  color: hsl(360, 100%, 97%);
}

/* JS */

javascript.block {
    color: hsl(217, 27%, 59%);
}

javascript.definition.function {
    color: hsl(207, 100%, 74%);
}
javascript.definition.function.anonymous {
    color: hsl(339, 94%, 63%);
}
javascript.identifier.method {
    color: hsl(339, 94%, 63%);
}
javascript.identifier.name {
    color: hsl(253, 100%, 96%);
}
javascript.identifier.argument {
    color: hsl(42, 86%, 81%);
}

tag.attribute.name {
    color: hsl(133, 73%, 70%);
}

/* JSX */

jsx.tag {
    color: hsl(217, 32%, 45%);
}
jsx.tag.name {
    color: hsl(133, 73%, 70%);
}

/* Rust */

definition.function{
  color: hsl(133, 73%, 70%);
}